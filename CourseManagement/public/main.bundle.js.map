{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/batch.service.ts","./src/app/batch/batch.component.css","./src/app/batch/batch.component.html","./src/app/batch/batch.component.ts","./src/app/course.service.ts","./src/app/course/course.component.css","./src/app/course/course.component.html","./src/app/course/course.component.ts","./src/app/lecture.service.ts","./src/app/lecture/lecture.component.css","./src/app/lecture/lecture.component.html","./src/app/lecture/lecture.component.ts","./src/app/student.service.ts","./src/app/student/student.component.css","./src/app/student/student.component.html","./src/app/student/student.component.ts","./src/app/studentbatch.service.ts","./src/app/subject.service.ts","./src/app/subject/subject.component.css","./src/app/subject/subject.component.html","./src/app/subject/subject.component.ts","./src/app/teacher.service.ts","./src/app/teacher/teacher.component.css","./src/app/teacher/teacher.component.html","./src/app/teacher/teacher.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div align=\\\"center\\\" >\\n    <nav style=\\\"background-color:aqua\\\">\\n        <a [routerLink]=\\\"['/courses']\\\">Courses</a>\\n        <a [routerLink]=\\\"['/students']\\\">Students</a>\\n        <a [routerLink]=\\\"['/subjects']\\\">Subjects</a>\\n        <a [routerLink]=\\\"['/teachers']\\\">Teachers</a>\\n    </nav>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { CourseComponent } from './course/course.component';\nimport { BatchComponent } from './batch/batch.component';\nimport { TeacherComponent } from './teacher/teacher.component';\nimport { StudentComponent } from './student/student.component';\nimport { LectureComponent } from './lecture/lecture.component';\nimport { SubjectComponent } from './subject/subject.component';\nimport {CourseService} from './course.service';\nimport {BatchService} from './batch.service';\nimport {TeacherService} from './teacher.service';\nimport {StudentService} from './student.service';\nimport {LectureService} from './lecture.service';\nimport {SubjectService} from './subject.service';\nimport {StudentbatchService} from './studentbatch.service';\n// import { AppRoutingModule } from './/app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CourseComponent,\n    BatchComponent,\n    TeacherComponent,\n    StudentComponent,\n    LectureComponent,\n    SubjectComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n            {path:\"courses\",component:CourseComponent},\n            {path:\"students\",component:StudentComponent},\n            {path:\"subjects\",component:SubjectComponent},\n            {path:\"teachers\",component:TeacherComponent},\n            {path:\"batches\",component:BatchComponent},\n            {path:\"main\",component:AppComponent},\n            {path:\" \",redirectTo:\"main\",pathMatch:\"full\"},\n            {path:\"**\",redirectTo:\"main\",pathMatch:\"full\"}\n        ]),\n  ],\n  providers: [\n    CourseService,\n    BatchService,\n    TeacherService,\n    StudentService,\n    LectureService,\n    SubjectService,\n    StudentbatchService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {batch} from './Batch';\n@Injectable()\nexport class BatchService {\n  BASE_URL = 'http://localhost:8003/api/batches';\n\n  constructor(private http: HttpClient) { }\n  getBatches(){\n    return this.http.get(this.BASE_URL);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/batch.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/batch/batch.component.css\n// module id = ./src/app/batch/batch.component.css\n// module chunks = main","module.exports = \"<p>\\n  batch works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/batch/batch.component.html\n// module id = ./src/app/batch/batch.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-batch',\n  templateUrl: './batch.component.html',\n  styleUrls: ['./batch.component.css']\n})\nexport class BatchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/batch/batch.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {course} from './Course';\nimport {batch} from './Batch';\nimport {lecture} from './Lecture';\n\n@Injectable()\nexport class CourseService {\n  BASE_URL = 'http://localhost:8003/api/courses';\n  BATCH_URL = 'http://localhost:8003/api/batches';\n  LECTURE_URL = 'http://localhost:8003/api/lectures';\n\n  constructor(private http: HttpClient) { }\n  getCourses(){\n    return this.http.get(this.BASE_URL);\n  }\n  \n  addCourse(value:course){\n     return this.http.post(this.BASE_URL, value);\n  }\n    \n  getBatches(id:number){\n    return this.http.get(this.BASE_URL+'/'+id+'/batches');\n  }\n\n  addBatch(value:batch){\n    return this.http.post(this.BATCH_URL,value);\n  }\n\n  getLectures(courseId:number,batchId:number){\n    return this.http.get(this.BASE_URL+'/'+courseId+'/batches/'+batchId+'/lectures')\n  }\n\n  addLecture(value:lecture){\n    return this.http.post(this.LECTURE_URL,value);\n  }\n\n  getStudents(courseId:number,batchId:number){\n    return this.http.get(this.BASE_URL+'/'+courseId+'/batches/'+batchId+'/students')\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/course.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/course/course.component.css\n// module id = ./src/app/course/course.component.css\n// module chunks = main","module.exports = \"<div style=\\\"background-color:antiquewhite\\\">\\n         <div align=\\\"center\\\">\\n            <font size=\\\"9\\\" color=\\\"coral\\\" align=\\\"center\\\">Courses</font>\\n        </div>\\n</div>\\n    <div align=\\\"center\\\">\\n        <table class=\\\"form-group\\\">\\n            <tr *ngFor=\\\"let item of Courses; let y = index\\\">\\n                <td style=\\\"background-color:cornsilk\\\">\\n                    <font size=\\\"5\\\" (click)=\\\"ViewBatch(y)\\\">{{item.Name}}</font>\\n                </td>    \\n            </tr>\\n        </table>\\n    </div>\\n    <br>\\n    <br>\\n    <div align=\\\"center\\\"  *ngIf=\\\"BatchList.length!==0\\\" >\\n        <table class=\\\"form-group\\\" style=\\\"border:ridge;width:200px\\\">\\n            <tr>\\n                <th>\\n                    Batch Name\\n                </th>\\n            </tr>\\n            <tr *ngFor=\\\"let item of BatchList; let y = index\\\">\\n                <td style=\\\"background-color:cornsilk\\\">\\n                    <font size=\\\"4\\\" (click)=\\\"ViewLectures(y);ViewStudents(y)\\\" >{{item.Name}}</font>\\n                </td>    \\n            </tr>\\n        </table>\\n        <div class=\\\"container\\\">\\n            <table align=\\\"center\\\" style=\\\"border:ridge\\\">\\n                <tr width=\\\"150px\\\">\\n                    <td width=\\\"15px\\\">\\n                        <font size=\\\"5\\\" color=\\\"brown\\\">BatchName:</font>\\n                    </td>\\n                    <td width=\\\"15px\\\">\\n                        <input name=\\\"batch\\\" type=\\\"text\\\" style=\\\"background-color:antiquewhite\\\" required  #Newbatch>\\n                    </td>\\n                    <td>\\n                        <button style=\\\"border:none\\\" (click)=\\\"addBatch(Newbatch.value)\\\">Add</button>\\n                    </td>\\n                </tr>\\n            </table>\\n        </div>\\n        <br />\\n        <table class=\\\"form-group\\\" *ngIf=\\\"LectureList.length!==0\\\" style=\\\"border:ridge;width:200px\\\" >\\n            <tr>\\n                <th>\\n                    Lecture Name\\n                </th>\\n            </tr>\\n            <tr *ngFor=\\\"let item of LectureList; let y = index\\\">\\n                <td style=\\\"background-color:cornsilk\\\">\\n                    <font size=\\\"4\\\"  >{{item.Name}}</font>\\n                </td>    \\n            </tr>\\n        </table>\\n         <div class=\\\"container\\\">\\n            <table align=\\\"center\\\" style=\\\"border:ridge\\\">\\n                <tr width=\\\"150px\\\">\\n                    <td width=\\\"15px\\\">\\n                        <font size=\\\"5\\\" color=\\\"brown\\\">LectureName:</font>\\n                    </td>\\n                    <td width=\\\"15px\\\">\\n                        <input name=\\\"batch\\\" type=\\\"text\\\" style=\\\"background-color:antiquewhite\\\" required  #Newlecture>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td>\\n                        Enter TeacherID from\\n                    </td>\\n                    <td>\\n                        <font size=\\\"3\\\" color=\\\"red\\\">1</font> to <font size=\\\"3\\\" color=\\\"red\\\">{{teacherListLength}}</font>  \\n                    </td>\\n                </tr>\\n                <tr width=\\\"150px\\\">\\n                    <td width=\\\"15px\\\">\\n                        <font size=\\\"5\\\" color=\\\"brown\\\">TeacherId:</font>\\n                    </td>\\n                    <td width=\\\"15px\\\">\\n                        <input name=\\\"batch\\\" type=\\\"text\\\" style=\\\"background-color:antiquewhite\\\" required  #teacherID>\\n                    </td>\\n                    <td>\\n                        <button style=\\\"border:none\\\" (click)=\\\"addLecture(Newlecture.value,teacherID.value)\\\">Add</button>\\n                    </td>\\n                </tr>\\n            </table>\\n        </div>\\n        <br />\\n        \\n        <table class=\\\"form-group\\\" *ngIf=\\\"StudentList.length!==0\\\" style=\\\"border:ridge;width:200px\\\">\\n            <tr>\\n                <th>\\n                    Student Name\\n                </th>\\n            </tr>\\n            <tr *ngFor=\\\"let item of StudentList; let y = index\\\">\\n                <td style=\\\"background-color:cornsilk\\\">\\n                    <font size=\\\"4\\\" >{{item.Name}}</font>\\n                </td>    \\n            </tr>\\n            <input type=\\\"text\\\" style=\\\"background-color:antiquewhite\\\" required  #Newstudent>\\n            <button style=\\\"border:none\\\" (click)=\\\"addStudent(Newstudent.value)\\\">Add</button>\\n        </table>\\n        \\n    </div>\\n    <br>\\n    <br>\\n    <div align=\\\"center\\\" style=\\\"border:solid\\\">\\n    <div class=\\\"container\\\">\\n        <p><font size=\\\"4\\\" color=\\\"coral\\\" align=\\\"center\\\">Add Course</font></p>\\n            <table align=\\\"center\\\" style=\\\"border:ridge\\\">\\n                <tr width=\\\"150px\\\">\\n                    <td width=\\\"15px\\\">\\n                        <font size=\\\"5\\\" color=\\\"brown\\\">CourseName:</font>\\n                    </td>\\n                    <td width=\\\"15px\\\">\\n                        <input name=\\\"coursename\\\" type=\\\"text\\\" style=\\\"background-color:antiquewhite\\\" required  #Newcourse>\\n                    </td>\\n                </tr>\\n            </table>\\n        </div>\\n        <br />\\n        <div align=\\\"center\\\">\\n             <button style=\\\"border:none\\\" (click)=\\\"addCourse(Newcourse.value)\\\">Add</button>\\n        </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/course/course.component.html\n// module id = ./src/app/course/course.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {course} from '../Course';\nimport {batch} from '../Batch';\nimport {lecture} from '../Lecture';\nimport {student} from '../Student';\nimport {teacher} from '../Teacher';\nimport {studentbatch }from '../StudentBatch'\nimport {CourseService} from '../course.service';\nimport {TeacherService} from '../teacher.service';\nimport {StudentService} from '../student.service';\nimport {StudentbatchService} from '../studentbatch.service'\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent implements OnInit {\n  Courses:course[];\n  BatchList:batch[]=[];\n  LectureList:lecture[]=[];\n  StudentList:student[]=[];\n  TeacherList:teacher[]=[];\n  newStudent:student[]=[];\n  coursenumber:number;\n  batchnumber:number;\n  teacherListLength:number;\n  newid:number;\n  constructor(private api:CourseService,private api2:TeacherService,private api3:StudentService,private api4:StudentbatchService) { }\n\n  ngOnInit() {\n    this.api.getCourses()\n      .subscribe((event:any)=>{\n      this.Courses=event;\n    })\n    this.api2.getTeachers()\n      .subscribe((event:any)=>{\n      this.TeacherList=event;\n      this.teacherListLength=this.TeacherList.length;\n    })\n\n  }\n  \n  addCourse(name:string){\n    console.log(name);\n    const data:course={\n      Name:name\n    };\n    this.api.addCourse(data)\n    .subscribe((event:any)=>{\n      this.Courses[this.Courses.length]={\n        Name:event.Name\n      }\n      window.alert(\"Course has been added\");\n    })\n  }\n\n  ViewBatch(id:number){\n    this.BatchList=[];\n    this.coursenumber=id;\n    this.api.getBatches((id+1))\n    .subscribe((event:any)=>{\n      this.BatchList=event;\n    })\n    }\n\n  addBatch(value:string){\n    const data:batch={\n      Name:value,\n      courseId:this.coursenumber+1\n    }\n    this.api.addBatch(data)\n    .subscribe((event:any)=>{\n      this.BatchList[this.BatchList.length]={\n        Name:event.Name,\n        courseId:event.courseId\n      }\n      window.alert(\"Batch has been added\");\n    })\n  }\n  ViewLectures(batchID:number){\n    this.batchnumber=batchID;\n    this.api.getLectures(this.coursenumber+1,batchID+1)\n    .subscribe((event:any)=>{\n      this.LectureList=event;\n    })\n  }\n\n  addLecture(lectureName:string,id:number){\n    const data:lecture={\n      Name:lectureName,\n      teacherId:id,\n      batchId:this.batchnumber+1\n    }\n    this.api.addLecture(data)\n    .subscribe((event:any)=>{\n      this.LectureList[this.LectureList.length]={\n        Name:event.Name,\n        teacherId:event.teacherId,\n        batchId:event.batchId\n      }\n      window.alert(\"Lecture has been added\");\n    })\n  }\n\n  ViewStudents(batchID:number){\n    this.api.getStudents(this.coursenumber+1,batchID+1)\n    .subscribe((event:any)=>{\n      this.StudentList=event;\n    })\n  }\n\n  addStudent(value)\n  {\n    const data:student={\n      Name:value\n    }\n    this.api3.addStudent(data)\n    .subscribe((event:any)=>{\n      this.StudentList[this.StudentList.length]={\n        Name:event.Name\n      }\n      window.alert(\"Student has been added\");\n    })\n    this.api3.getStudents()\n    .subscribe((event:student[])=>{\n      this.newStudent=event;\n      this.newid=this.newStudent.length;\n      this.addstbatch();\n    })\n  }\n\n  addstbatch()\n  {\n      const data2:studentbatch={\n      studentId:this.newStudent.length,\n      batchId:this.batchnumber+1\n    }\n    console.log(data2);\n    this.api4.addStudentBatch(data2)\n    .subscribe((event)=>{\n      \n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/course/course.component.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LectureService {\n\n  constructor() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/lecture.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/lecture/lecture.component.css\n// module id = ./src/app/lecture/lecture.component.css\n// module chunks = main","module.exports = \"<p>\\n  lecture works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/lecture/lecture.component.html\n// module id = ./src/app/lecture/lecture.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lecture',\n  templateUrl: './lecture.component.html',\n  styleUrls: ['./lecture.component.css']\n})\nexport class LectureComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/lecture/lecture.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {student} from './Student';\n\n@Injectable()\nexport class StudentService {\n  BASE_URL = 'http://localhost:8003/api/students';\n  constructor(private http: HttpClient) { }\n\n  getStudents(){\n    return this.http.get(this.BASE_URL);\n  }\n  addStudent(value:student){\n    return this.http.post(this.BASE_URL, value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/student.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/student/student.component.css\n// module id = ./src/app/student/student.component.css\n// module chunks = main","module.exports = \"<div style=\\\"background-color:antiquewhite\\\">\\n         <div align=\\\"center\\\">\\n            <font size=\\\"9\\\" color=\\\"coral\\\" align=\\\"center\\\">Students</font>\\n        </div>\\n</div>\\n\\n<div align=\\\"center\\\">\\n    <table class=\\\"form-group\\\">\\n        <tr *ngFor=\\\"let item of StudentList; let y = index\\\">\\n            <td style=\\\"background-color:cornsilk\\\">\\n                <font size=\\\"5\\\" (click)=\\\"ViewBatches(y)\\\">{{item.Name}}</font>\\n            </td>    \\n        </tr>\\n    </table>\\n    \\n    <div *ngIf=\\\"viewbatches\\\">\\n        Enter BatchId from <font size=\\\"3\\\" color=\\\"red\\\">1</font> to <font size=\\\"3\\\" color=\\\"red\\\">{{batchNumber}}</font>  \\n        <table align=\\\"center\\\" style=\\\"border:ridge\\\">\\n                <tr width=\\\"150px\\\">\\n                    <td width=\\\"15px\\\">\\n                        <font size=\\\"5\\\" color=\\\"brown\\\">BatchId:</font>\\n                    </td>\\n                    <td width=\\\"15px\\\">\\n                        <input name=\\\"batch\\\" type=\\\"text\\\" style=\\\"background-color:antiquewhite\\\" required #batchID>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <button style=\\\"border:none\\\" (click)=\\\"addStudentBatch(batchID.value)\\\">Add</button>\\n                </tr>\\n        </table>\\n    </div>\\n</div>\\n\\n<div align=\\\"center\\\">\\n    <div class=\\\"container\\\">\\n        <p><font size=\\\"6\\\" color=\\\"coral\\\" align=\\\"center\\\">Add Student</font></p>\\n            <table align=\\\"center\\\" style=\\\"border:ridge\\\">\\n                <tr width=\\\"150px\\\">\\n                    <td width=\\\"15px\\\">\\n                        <font size=\\\"5\\\" color=\\\"brown\\\">StudentName:</font>\\n                    </td>\\n                    <td width=\\\"15px\\\">\\n                        <input name=\\\"studentname\\\" type=\\\"text\\\" style=\\\"background-color:antiquewhite\\\" required  #Newstudent>\\n                    </td>\\n                </tr>\\n            </table>\\n        </div>\\n\\n        <br />\\n        <div align=\\\"center\\\">\\n             <button style=\\\"border:none\\\" (click)=\\\"addStudent(Newstudent.value)\\\">Add</button>\\n        </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/student/student.component.html\n// module id = ./src/app/student/student.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {student} from '../Student';\nimport { batch } from '../Batch';\nimport {studentbatch} from '../StudentBatch'\nimport {StudentService} from '../student.service';\nimport {BatchService} from '../batch.service';\nimport {StudentbatchService} from '../studentbatch.service'\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\n\nexport class StudentComponent implements OnInit {\n  StudentList:student[];\n  BatchList:batch[];\n  batchNumber:number;\n  viewbatches:boolean=false;\n  studentid:number;\n  constructor(private api:StudentService,private api2:BatchService,private api3:StudentbatchService) { }\n\n  ngOnInit() {\n    this.api.getStudents()\n      .subscribe((event:any)=>{\n      this.StudentList=event;\n      console.log(this.StudentList);\n    })\n\n    this.api2.getBatches()\n    .subscribe((event:any)=>{\n      this.BatchList=event;\n      this.batchNumber=this.BatchList.length;\n    })\n  }\n  addStudent(name:string){\n    console.log(name);\n    const data:student={\n      Name:name\n    };\n    this.api.addStudent(data)\n    .subscribe((event:any)=>{\n      this.StudentList[this.StudentList.length]={\n        Name:event.Name\n      }\n      console.log(this.StudentList);\n    })\n  }\n\n  ViewBatches(studentId:number){\n    this.studentid=studentId;\n    this.viewbatches=true;\n  }\n\n  addStudentBatch(batchid:number){\n    const data:studentbatch={\n      studentId:this.studentid+1,\n      batchId:batchid\n    }\n    this.api3.addStudentBatch(data)\n    .subscribe((event:any)=>{\n      \n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/student/student.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {studentbatch} from './StudentBatch';\n@Injectable()\nexport class StudentbatchService {\n  BASE_URL = 'http://localhost:8003/api/stbatches';\n   constructor(private http: HttpClient) { }\n  addStudentBatch(value:studentbatch){\n    return this.http.post(this.BASE_URL,value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/studentbatch.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {subject} from './Subject';\n\n@Injectable()\nexport class SubjectService {\n  BASE_URL = 'http://localhost:8003/api/subjects';\n\n  constructor(private http: HttpClient) { }\n\n  getSubjects(){\n    return this.http.get(this.BASE_URL);\n  }\n\n  addSubject(value:subject){\n    return this.http.post(this.BASE_URL, value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/subject.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/subject/subject.component.css\n// module id = ./src/app/subject/subject.component.css\n// module chunks = main","module.exports = \"<div style=\\\"background-color:antiquewhite\\\">\\n  <div align=\\\"center\\\">\\n    <font size=\\\"9\\\" color=\\\"coral\\\" align=\\\"center\\\">Subjects</font>\\n  </div>\\n</div>\\n\\n<div align=\\\"center\\\">\\n    <table class=\\\"form-group\\\">\\n        <tr *ngFor=\\\"let item of SubjectList; let y = index\\\">\\n            <td style=\\\"background-color:cornsilk\\\">\\n                {{item.Name}} \\n            </td>    \\n        </tr>\\n    </table>\\n</div>\\n\\n<div align=\\\"center\\\">\\n    <div class=\\\"container\\\">\\n        <p><font size=\\\"6\\\" color=\\\"coral\\\" align=\\\"center\\\">Add Subject</font></p>\\n            <table align=\\\"center\\\" style=\\\"border:ridge\\\">\\n                <tr width=\\\"150px\\\">\\n                    <td width=\\\"15px\\\">\\n                        <font size=\\\"5\\\" color=\\\"brown\\\">SubjectName:</font>\\n                    </td>\\n                    <td width=\\\"15px\\\">\\n                        <input name=\\\"subjectname\\\" type=\\\"text\\\" style=\\\"background-color:antiquewhite\\\" required  #Newsubject>\\n                    </td>\\n                </tr>\\n                <tr>\\n                  Enter CourseId from <font size=\\\"3\\\" color=\\\"red\\\">1</font> to <font size=\\\"3\\\" color=\\\"red\\\">{{numberOfCourses}}</font>  \\n                  <!-- <td *ngFor=\\\"let val of CourseId\\\">\\n                    {{val}}\\n                  </td> -->\\n                </tr>\\n\\n                <tr width=\\\"150px\\\">\\n                    <td width=\\\"15px\\\">\\n                        <font size=\\\"5\\\" color=\\\"brown\\\">CourseId:</font>\\n                    </td>\\n                    <td width=\\\"15px\\\">\\n                        <input name=\\\"course\\\" type=\\\"text\\\" style=\\\"background-color:antiquewhite\\\" required #courseValue>\\n                    </td>\\n                </tr>\\n            </table>\\n        </div>\\n        <br />\\n        <div align=\\\"center\\\">\\n             <button style=\\\"border:none\\\" (click)=\\\"addSubject(Newsubject.value,courseValue.value)\\\">Add</button>\\n        </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/subject/subject.component.html\n// module id = ./src/app/subject/subject.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {subject} from '../Subject';\nimport {SubjectService} from '../subject.service';\nimport {CourseService} from '../course.service';\n@Component({\n  selector: 'app-subject',\n  templateUrl: './subject.component.html',\n  styleUrls: ['./subject.component.css']\n})\nexport class SubjectComponent implements OnInit {\n  SubjectList:subject[];\n  Courses:Number[];\n  numberOfCourses:number;\n  constructor(private api:SubjectService,private api2:CourseService) { }\n\n  ngOnInit() {\n    this.api.getSubjects()\n      .subscribe((event:any)=>{\n      this.SubjectList=event;\n      console.log(this.SubjectList);\n    })\n\n    this.api2.getCourses()\n    .subscribe((event:any)=>{\n      this.Courses=event\n      console.log(this.Courses);\n      this.numberOfCourses=this.Courses.length;\n    })\n  }\n\n  addSubject(subject,id){\n    const data: subject = {\n            Name: subject,\n            courseId: id\n        };\n    this.api.addSubject(data)\n            .subscribe((event: any) => {\n                this.SubjectList[this.SubjectList.length] = {\n                    Name: event.Name,\n                    courseId: event.courseId\n                }\n                  window.alert(\"subject has been added\");\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/subject/subject.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {teacher} from './Teacher';\n\n@Injectable()\nexport class TeacherService {\n  BASE_URL = 'http://localhost:8003/api/teachers';\n\n  constructor(private http: HttpClient) { }\n  getTeachers(){\n    return this.http.get(this.BASE_URL);\n  }\n  addTeacher(value:teacher){\n    return this.http.post(this.BASE_URL,value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/teacher.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/teacher/teacher.component.css\n// module id = ./src/app/teacher/teacher.component.css\n// module chunks = main","module.exports = \"<div style=\\\"background-color:antiquewhite\\\">\\n  <div align=\\\"center\\\">\\n    <font size=\\\"9\\\" color=\\\"coral\\\" align=\\\"center\\\">Teachers</font>\\n  </div>\\n</div>\\n\\n<div align=\\\"center\\\">\\n    <table class=\\\"form-group\\\">\\n        <tr *ngFor=\\\"let item of TeacherList\\\">\\n            <td style=\\\"background-color:cornsilk\\\">\\n                {{item.Name}} \\n            </td>    \\n        </tr>\\n    </table>\\n</div>\\n\\n<div align=\\\"center\\\">\\n    <div class=\\\"container\\\">\\n        <p><font size=\\\"6\\\" color=\\\"coral\\\" align=\\\"center\\\">Add Teacher</font></p>\\n            <table align=\\\"center\\\" style=\\\"border:ridge\\\">\\n                <tr width=\\\"150px\\\">\\n                    <td width=\\\"15px\\\">\\n                        <font size=\\\"5\\\" color=\\\"brown\\\">TeacherName:</font>\\n                    </td>\\n                    <td width=\\\"15px\\\">\\n                        <input name=\\\"teachername\\\" type=\\\"text\\\" style=\\\"background-color:antiquewhite\\\" required  #Newteacher>\\n                    </td>\\n                </tr>\\n                <tr>\\n                  Enter SubjectId from <font size=\\\"3\\\" color=\\\"red\\\">1</font> to <font size=\\\"3\\\" color=\\\"red\\\">{{numberOfSubjects}}</font>             \\n                </tr>\\n\\n                <tr width=\\\"150px\\\">\\n                    <td width=\\\"15px\\\">\\n                        <font size=\\\"5\\\" color=\\\"brown\\\">SubjectId:</font>\\n                    </td>\\n                    <td width=\\\"15px\\\">\\n                        <input name=\\\"subject\\\" type=\\\"text\\\" style=\\\"background-color:antiquewhite\\\" required #subjectValue>\\n                    </td>\\n                </tr>\\n            </table>\\n        </div>\\n        <br />\\n        <div align=\\\"center\\\">\\n             <button style=\\\"border:none\\\" (click)=\\\"addTeacher(Newteacher.value,subjectValue.value)\\\">Add</button>\\n        </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/teacher/teacher.component.html\n// module id = ./src/app/teacher/teacher.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {teacher} from '../Teacher';\nimport {subject} from '../Subject';\nimport {TeacherService} from '../teacher.service';\nimport {SubjectService} from '../subject.service';\n\n@Component({\n  selector: 'app-teacher',\n  templateUrl: './teacher.component.html',\n  styleUrls: ['./teacher.component.css']\n})\nexport class TeacherComponent implements OnInit {\n  TeacherList:teacher[];\n  SubjectList:subject[];\n  numberOfSubjects:number;\n  constructor(private api:TeacherService,private api2:SubjectService) { }\n\n  ngOnInit() {\n    this.api.getTeachers()\n      .subscribe((event:any)=>{\n      this.TeacherList=event;\n    })\n    this.api2.getSubjects()\n    .subscribe((event:any)=>{\n      this.SubjectList=event;\n      this.numberOfSubjects=this.SubjectList.length;\n    })\n  }\n  \n  addTeacher(teacher,id){\n    const data: teacher = {\n            Name: teacher,\n            subjectId: id\n        };\n    this.api.addTeacher(data)\n            .subscribe((event: any) => {\n                this.TeacherList[this.TeacherList.length] = {\n                    Name: event.Name,\n                    subjectId: event.subjectId\n                }\n            });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/teacher/teacher.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}